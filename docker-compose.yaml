services:
  cache:
    image: postgres:latest
    container_name: cache
    expose:
      - 5432
    environment:
      - POSTGRES_USER=cache
      - POSTGRES_PASSWORD=cache
      - POSTGRES_DB=cache
    volumes:
      - ./.db/cache.sql:/docker-entrypoint-initdb.d/init.sql
  external:
    image: postgres:latest
    container_name: external
    expose:
      - 5432
    environment:
      - POSTGRES_USER=external
      - POSTGRES_PASSWORD=external
      - POSTGRES_DB=external
    volumes:
      - ./.db/external.sql:/docker-entrypoint-initdb.d/init.sql
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./.localstack/init.sh:/etc/localstack/init/ready.d/init-aws.sh"
  invalidation-service:
    depends_on:
      - cache
      - external
      - localstack
      - external-service    
    image: invalidation-service
    build:
      context: .
      dockerfile: Dockerfile
      target: invalidation-service
    environment:
      - AWS_ENDPOINT=http://localstack:4566
      - QUEUE_URL=http://localstack:4566/000000000000/invalidation-queue
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DATABASE_URL=postgresql://cache:cache@cache:5432/cache
      - NEW_RELIC_APP_NAME=invalidation-service
      - NEW_RELIC_LICENSE_KEY=e6ec3fc9a099aba378ec15a656c00323FFFFNRAL
      - NEW_RELIC_DISTRIBUTED_TRACING_ENABLED=true
      - NEW_RELIC_LOG=stdout
      - NEW_RELIC_NO_CONFIG_FILE=true
  external-service:
    depends_on:
      - external
    image: external-service
    build:
      context: .
      dockerfile: Dockerfile
      target: external-service
    ports:
      - "80:80"
    environment:
      - DATABASE_URL=postgresql://external:external@external:5432/external
      - JWT_SECRET=secret
      - NEW_RELIC_APP_NAME=external-service
      - NEW_RELIC_LICENSE_KEY=e6ec3fc9a099aba378ec15a656c00323FFFFNRAL
      - NEW_RELIC_DISTRIBUTED_TRACING_ENABLED=true
      - NEW_RELIC_LOG=stdout
      - NEW_RELIC_NO_CONFIG_FILE=true

  api-gateway:
    depends_on:
      - cache
      - external
      - localstack
      - external-service
    image: api-gateway
    build:
      context: .
      dockerfile: Dockerfile
      target: api-gateway
    ports:
      - "8000:8000"
    environment:
      - AWS_ENDPOINT=http://localstack:4566
      - QUEUE_URL=http://localstack:4566/000000000000/invalidation-queue
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DATABASE_URL=postgresql://cache:cache@cache:5432/cache
      - EXTERNAL_API_URL=http://external-service:80
      - NEW_RELIC_APP_NAME=api-gateway
      - NEW_RELIC_LICENSE_KEY=e6ec3fc9a099aba378ec15a656c00323FFFFNRAL
      - NEW_RELIC_DISTRIBUTED_TRACING_ENABLED=true
      - NEW_RELIC_LOG=stdout
      - NEW_RELIC_NO_CONFIG_FILE=true
      
volumes:
  esdata:
    driver: local